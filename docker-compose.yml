services:
  db:
    image: postgres:16
    container_name: db
    env_file:
      - ./docker/env/db.env
    volumes:
      - db_data:/var/lib/postgresql/db_data # add data dir to ensure data persists at container re-creation
      - ./docker/init-db:/docker-entrypoint-initdb.d # For adding initialisation scripts.
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  bb_api:
    build:
      context: ./BulletinBoard/api
      dockerfile: Dockerfile
    env_file:
      - ./docker/env/db.env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/appdb
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8001:8000"

  ra_api:
    build:
      context: ./RegistrationAuthority/api
      dockerfile: Dockerfile
    environment:
      DATA_DIR: /app/data
      VOTER_SK_ENCRYPTION_KEY: K2QWtYSxwTUzCPF7w8uWWB_QwMFReMtAFHd3bq5tJqQ=
    depends_on:
      vs_api:
        condition: service_healthy
      ts_api:
        condition: service_healthy
    ports:
      - "8002:8000"
    volumes:
      - ./RegistrationAuthority/api/electionData:/app/data:ro

  va_api:
    build:
      context: ./VotingApp/api
      dockerfile: Dockerfile
    volumes:
      - va_data:/duckdb
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/appdb
      BB_API_URL: http://bb_api:8000
      VOTER_SK_DECRYPTION_KEY: K2QWtYSxwTUzCPF7w8uWWB_QwMFReMtAFHd3bq5tJqQ=
      DUCKDB_PATH: /duckdb/voter-secret-keys.duckdb
    ports:
      - "8003:8000"

  # React frontend
  va_web:
    build:
      context: ./VotingApp/web
      dockerfile: Dockerfile
    environment:
      VITE_API_VOTINGAPP: http://va_api:8000
    depends_on:
      - va_api
    ports:
      - "5173:80"

  vs_api:
    build:
      context: ./VotingServer/api
      dockerfile: Dockerfile
    volumes:
      - vs_data:/duckdb
    env_file:
      - ./docker/env/db.env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/appdb
      DUCKDB_PATH: /duckdb/voter-timestamps.duckdb
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "8004:8000"

  ts_api:
    build:
      context: ./TallyingServer/api
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    ports:
      - "8005:8000"

volumes:
  db_data:
  vs_data:
  va_data:
